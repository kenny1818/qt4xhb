/*

  Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QAudioInputSlots.h"

static QAudioInputSlots * s = NULL;

QAudioInputSlots::QAudioInputSlots(QObject *parent) : QObject(parent)
{
}

QAudioInputSlots::~QAudioInputSlots()
{
}
void QAudioInputSlots::stateChanged( QAudio::State state )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "stateChanged(QAudio::State)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pstate = hb_itemPutNI( NULL, (int) state );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pstate );
    hb_itemRelease( psender );
    hb_itemRelease( pstate );
  }
}
void QAudioInputSlots::notify()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "notify()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}

HB_FUNC( QAUDIOINPUT_ONSTATECHANGED )
{
  if( s == NULL )
  {
    s = new QAudioInputSlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "stateChanged(QAudio::State)", "stateChanged(QAudio::State)" ) );
}

HB_FUNC( QAUDIOINPUT_ONNOTIFY )
{
  if( s == NULL )
  {
    s = new QAudioInputSlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "notify()", "notify()" ) );
}

