/*

  Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QGraphicsOpacityEffectSlots.h"

static QGraphicsOpacityEffectSlots * s = NULL;

QGraphicsOpacityEffectSlots::QGraphicsOpacityEffectSlots(QObject *parent) : QObject(parent)
{
}

QGraphicsOpacityEffectSlots::~QGraphicsOpacityEffectSlots()
{
}
void QGraphicsOpacityEffectSlots::opacityChanged( qreal opacity )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "opacityChanged(qreal)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM popacity = hb_itemPutND( NULL, opacity );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, popacity );
    hb_itemRelease( psender );
    hb_itemRelease( popacity );
  }
}
void QGraphicsOpacityEffectSlots::opacityMaskChanged( const QBrush & mask )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "opacityMaskChanged(QBrush)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pmask = hb_itemPutPtr( NULL, (QBrush *) &mask );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pmask );
    hb_itemRelease( psender );
    hb_itemRelease( pmask );
  }
}

void QGraphicsOpacityEffectSlots_connect_signal ( const QString & signal, const QString & slot )
{
  if( s == NULL )
  {
    s = new QGraphicsOpacityEffectSlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, signal, slot ) );
}
